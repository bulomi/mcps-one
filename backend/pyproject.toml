[project]
name = "mcps-one-backend"
version = "1.0.0"
description = "mcps-one Backend - MCP Tools Management Platform"
authors = [
    {name = "bulomi", email = "bulomi@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "requests>=2.31.0",
    "httpx>=0.26.0",
    "aiohttp>=3.9.1",
    "websockets>=12.0",
    "jsonrpc-base>=2.2.0",
    "jsonrpc-websocket>=3.1.5",
    "jsonrpc-async>=2.1.2",
    "fastmcp>=2.10.6",
    "mcp>=1.0.0",
    "psutil>=5.9.6",
    "python-dotenv>=1.1.0",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.2",
    "tenacity>=8.2.3",
    "slowapi>=0.1.9",
    "python-slugify>=8.0.1",
    "pendulum>=2.1.2",
    "email-validator>=2.1.0",
    "cryptography>=41.0.7",
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "isort>=5.12.0",
    "coverage>=7.3.2"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/bulomi/mcps-one"
Repository = "https://github.com/bulomi/mcps-one.git"
Issues = "https://github.com/bulomi/mcps-one/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
# UV 配置
index-url = "https://pypi.org/simple"
extra-index-url = []

[tool.uv.sources]
# 可以在这里指定特定包的源

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m 'not slow')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]