"""Add proxy tables

Revision ID: b913facd5fe0
Revises: b9a86d9c925c
Create Date: 2025-07-18 20:46:40.833676

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b913facd5fe0'
down_revision = 'b9a86d9c925c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('proxy_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False, comment='分类名称'),
    sa.Column('display_name', sa.String(length=100), nullable=False, comment='显示名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='分类描述'),
    sa.Column('icon', sa.String(length=50), nullable=True, comment='图标'),
    sa.Column('color', sa.String(length=20), nullable=True, comment='颜色'),
    sa.Column('sort_order', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_proxy_categories_id'), 'proxy_categories', ['id'], unique=False)
    op.create_index(op.f('ix_proxy_categories_name'), 'proxy_categories', ['name'], unique=True)

    op.create_table('mcp_proxies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='代理名称'),
    sa.Column('display_name', sa.String(length=200), nullable=False, comment='显示名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='代理描述'),
    sa.Column('type', sa.Enum('http', 'https', 'socks4', 'socks5', name='proxytype'), nullable=True, comment='代理类型'),
    sa.Column('protocol', sa.Enum('http', 'https', 'socks4', 'socks5', name='proxyprotocol'), nullable=True, comment='代理协议'),
    sa.Column('host', sa.String(length=255), nullable=False, comment='代理主机'),
    sa.Column('port', sa.Integer(), nullable=False, comment='代理端口'),
    sa.Column('username', sa.String(length=100), nullable=True, comment='用户名'),
    sa.Column('password', sa.String(length=255), nullable=True, comment='密码'),
    sa.Column('auth_type', sa.String(length=20), nullable=True, comment='认证类型'),
    sa.Column('timeout', sa.Integer(), nullable=True, comment='超时时间（秒）'),
    sa.Column('max_connections', sa.Integer(), nullable=True, comment='最大连接数'),
    sa.Column('retry_count', sa.Integer(), nullable=True, comment='重试次数'),
    sa.Column('status', sa.Enum('active', 'inactive', 'testing', 'error', name='proxystatus'), nullable=True, comment='代理状态'),
    sa.Column('enabled', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('category_id', sa.Integer(), nullable=True, comment='分类ID'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='标签'),
    sa.Column('country', sa.String(length=50), nullable=True, comment='国家'),
    sa.Column('region', sa.String(length=100), nullable=True, comment='地区'),
    sa.Column('city', sa.String(length=100), nullable=True, comment='城市'),
    sa.Column('isp', sa.String(length=100), nullable=True, comment='ISP提供商'),
    sa.Column('anonymity_level', sa.String(length=20), nullable=True, comment='匿名级别'),
    sa.Column('speed_mbps', sa.Float(), nullable=True, comment='速度（Mbps）'),
    sa.Column('uptime_percentage', sa.Float(), nullable=True, comment='在线率（%）'),
    sa.Column('last_checked_at', sa.DateTime(), nullable=True, comment='最后检查时间'),
    sa.Column('last_success_at', sa.DateTime(), nullable=True, comment='最后成功时间'),
    sa.Column('total_requests', sa.Integer(), nullable=True, comment='总请求数'),
    sa.Column('successful_requests', sa.Integer(), nullable=True, comment='成功请求数'),
    sa.Column('failed_requests', sa.Integer(), nullable=True, comment='失败请求数'),
    sa.Column('average_response_time', sa.Float(), nullable=True, comment='平均响应时间（ms）'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['category_id'], ['proxy_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mcp_proxies_category_id'), 'mcp_proxies', ['category_id'], unique=False)
    op.create_index(op.f('ix_mcp_proxies_country'), 'mcp_proxies', ['country'], unique=False)
    op.create_index(op.f('ix_mcp_proxies_enabled'), 'mcp_proxies', ['enabled'], unique=False)
    op.create_index(op.f('ix_mcp_proxies_host'), 'mcp_proxies', ['host'], unique=False)
    op.create_index(op.f('ix_mcp_proxies_id'), 'mcp_proxies', ['id'], unique=False)
    op.create_index(op.f('ix_mcp_proxies_name'), 'mcp_proxies', ['name'], unique=True)
    op.create_index(op.f('ix_mcp_proxies_status'), 'mcp_proxies', ['status'], unique=False)
    op.create_index(op.f('ix_mcp_proxies_type'), 'mcp_proxies', ['type'], unique=False)

    op.create_table('proxy_test_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proxy_id', sa.Integer(), nullable=False, comment='代理ID'),
    sa.Column('test_type', sa.String(length=50), nullable=True, comment='测试类型'),
    sa.Column('target_url', sa.String(length=500), nullable=True, comment='测试目标URL'),
    sa.Column('success', sa.Boolean(), nullable=True, comment='是否成功'),
    sa.Column('response_time', sa.Float(), nullable=True, comment='响应时间（ms）'),
    sa.Column('status_code', sa.Integer(), nullable=True, comment='HTTP状态码'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息'),
    sa.Column('test_data', sa.JSON(), nullable=True, comment='测试数据'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.ForeignKeyConstraint(['proxy_id'], ['mcp_proxies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_proxy_test_results_created_at'), 'proxy_test_results', ['created_at'], unique=False)
    op.create_index(op.f('ix_proxy_test_results_id'), 'proxy_test_results', ['id'], unique=False)
    op.create_index(op.f('ix_proxy_test_results_proxy_id'), 'proxy_test_results', ['proxy_id'], unique=False)
    op.create_index(op.f('ix_proxy_test_results_success'), 'proxy_test_results', ['success'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_proxy_test_results_success'), table_name='proxy_test_results')
    op.drop_index(op.f('ix_proxy_test_results_proxy_id'), table_name='proxy_test_results')
    op.drop_index(op.f('ix_proxy_test_results_id'), table_name='proxy_test_results')
    op.drop_index(op.f('ix_proxy_test_results_created_at'), table_name='proxy_test_results')
    op.drop_table('proxy_test_results')
    op.drop_index(op.f('ix_mcp_proxies_type'), table_name='mcp_proxies')
    op.drop_index(op.f('ix_mcp_proxies_status'), table_name='mcp_proxies')
    op.drop_index(op.f('ix_mcp_proxies_name'), table_name='mcp_proxies')
    op.drop_index(op.f('ix_mcp_proxies_id'), table_name='mcp_proxies')
    op.drop_index(op.f('ix_mcp_proxies_host'), table_name='mcp_proxies')
    op.drop_index(op.f('ix_mcp_proxies_enabled'), table_name='mcp_proxies')
    op.drop_index(op.f('ix_mcp_proxies_country'), table_name='mcp_proxies')
    op.drop_index(op.f('ix_mcp_proxies_category_id'), table_name='mcp_proxies')
    op.drop_table('mcp_proxies')
    op.drop_index(op.f('ix_proxy_categories_name'), table_name='proxy_categories')
    op.drop_index(op.f('ix_proxy_categories_id'), table_name='proxy_categories')
    op.drop_table('proxy_categories')
    # ### end Alembic commands ###
